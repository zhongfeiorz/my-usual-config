
#lunch cuttlefish
source build/envsetup.sh
lunch aosp_cf_x86_auto-userdebug
#lunch aosp_cf_arm64_auto-userdebug
make -j4
#make dist DIST_DIR=dist_output -j10

#lunch trout
source build/envsetup.sh
lunch aosp_trout_x86-userdebug
make dist DIST_DIR=dist_output -j12

#lunch arm64
source build/envsetup.sh
lunch aosp_arm64-eng
make -j12

#启动
#运行  -daemon 表示在后台运行，不显示log；-verbosity=VERBOSE 表示显示所有log
HOME=$PWD ./bin/launch_cvd -daemon
#停止
HOME=$PWD ./bin/stop_cvd
# run adb shell
HOME=$PWD ./bin/adb shell
#run double-display
HOME=$PWD ./bin/launch_cvd -daemon -display0=width=1080,height=600,dpi=120 -display1=width=400,height=600,dpi=120
#run gfxstream
HOME=$PWD ./bin/launch_cvd -daemon -gpu_mode=gfxstream
# scrcpy
scrcpy --tcpip=0.0.0.0:6520
# webrtc
https://localhost:8443/

#vmware
//vmware 手动挂在 共享文件夹
1、设置共享文件夹
2、打开虚拟机 终端输入 vmware-hgfsclient  查看共享文件夹
3、
    #将所有共享文件夹挂载到/mnt/hgfs
    sudo vmhgfs-fuse .host:/ /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other

    #将名称sharedfolder的共享挂载到/mnt/hgfs
    sudo vmhgfs-fuse .host:/sharedfolder /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other

# build mali g78 gralloc
设置编译选项 Enabling build files for Gralloc version 4
cd driver/product/android/gralloc
./configure ANDROID_12=y GRALLOC_4=y TARGET_BUILD="debug"

执行 mm 编译

得到
/vendor/lib/hw/android.hardware.graphics.allocator@4.0-impl-arm.so
/vendor/lib/hw/android.hardware.graphics.mapper@4.0-impl-arm.so
/vendor/lib/arm.graphics-V2-ndk_platform.so

# build a1000b
编译命令
source build/envsetup.sh;lunch a1000b-userdebug;
lunch a1000b-userdebug
make -j12

make bootimage -j12 ; cp out/target/product/a1000b/boot.img ~/IMG/A1000B/boot.img
make bootimage -j12 ; cp out/target/product/a1000b/boot.img ~/IMG/A1000B-vendor_boot/boot.img

查看主板 config 文件
zcat /proc/config.gz > /sdcard/linux-config.txt
adb pull /sdcard/linux-config.txt

查看鼠标设备输出信息
getevent -ltr /dev/input/event0
